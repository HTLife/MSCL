NDSummary.OnToolTipsLoaded("File:Types.h",{5497:"<div class=\"NDToolTip TSection LC\"><div class=\"TTSummary\">Contains various typedefs that are used throughout MSCL.</div></div>",5499:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 1-byte signed integer.</div></div>",5500:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 2-byte signed integer.</div></div>",5501:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 4-byte signed integer.</div></div>",5502:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for an 8-byte signed integer.</div></div>",5503:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 1-byte unsigned integer.</div></div>",5504:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 2-byte unsigned integer.</div></div>",5505:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 4-byte unsigned integer.</div></div>",5506:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for an 8-byte unsigned integer.</div></div>",5507:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a Node\'s node address.</div></div>",5508:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for a lock_gaurd (automatically locks and unlocks) to a mutex.</div></div>",5509:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for a lock_gaurd (automatically locks and unlocks) to a recursive mutex.</div></div>",5510:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for an id that uniquely identifies a wireless packet.</div></div>",5511:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for a simple_any type</div></div>",5513:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5513\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">template</span> &lt;<span class=\"SHKeyword\">class</span> Tout, <span class=\"SHKeyword\">class</span> Tin&gt; Tout checked_cast(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">Tin&nbsp;</td><td></td><td class=\"PName\">value,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName\">valueName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\">Tout&nbsp;</td><td></td><td class=\"PName\">min&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">std::numeric_limits&lt;Tout&gt;::min(),</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Tout&nbsp;</td><td></td><td class=\"PName\">max&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">std::numeric_limits&lt;Tout&gt;::max()</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Safely casts one type to another type using static_cast by checking the limit of the cast first</div></div>",5515:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a vector of bytes.</div></div>"});